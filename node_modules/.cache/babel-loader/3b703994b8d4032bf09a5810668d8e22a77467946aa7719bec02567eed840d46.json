{"ast":null,"code":"var _jsxFileName = \"/Users/chim/arweave_website_proto/ao_embedder_proto/src/App.js\",\n  _s = $RefreshSig$();\nimport { message, result, createDataItemSigner } from '@permaweb/aoconnect';\n// Consider importing a UI framework here\nimport React, { useState, useEffect } from 'react';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isArConnectAvailable, setIsArConnectAvailable] = useState(false);\n  const [messageResponse, setMessageResponse] = useState(null);\n  const [resultOutput, setResultOutput] = useState(null);\n  const [textInput, setTextInput] = useState(''); // Re-introduced for input field usage\n\n  const theme = createTheme({\n    // You can customize your theme here. For now, we'll just use the default theme.\n  });\n  useEffect(() => {\n    setIsArConnectAvailable(!!window.arweaveWallet);\n  }, []);\n  const handleTextInputChange = event => {\n    setTextInput(event.target.value);\n  };\n  const fetchResult = async messageId => {\n    try {\n      let {\n        Messages,\n        Spawns,\n        Output,\n        Error\n      } = await result({\n        message: messageId,\n        // Use the messageId from sendMessage response\n        process: \"XZllrzvpGSz52qQnmA_H-3q6OEz-jAl7-AfV0ZGRvik\"\n      });\n      console.log(\"Result data:\", {\n        Messages,\n        Spawns,\n        Output,\n        Error\n      });\n      setResultOutput(Messages[0].Data); // Store the result data for displaying\n    } catch (error) {\n      console.error(\"Error fetching result:\", error);\n    }\n  };\n  const connectToArConnect = async () => {\n    try {\n      // Requesting permissions from ArConnect; adjust permissions as needed\n      await window.arweaveWallet.connect(['ACCESS_ADDRESS', 'SIGN_TRANSACTION']);\n      console.log('Connected to ArConnect.');\n    } catch (error) {\n      console.error('Error connecting to ArConnect:', error);\n    }\n  };\n\n  // Adjust sendMessage to use textInput\n  const sendMessage = async () => {\n    if (!isArConnectAvailable) {\n      alert('Please install ArConnect.');\n      return;\n    }\n    try {\n      const response = await message({\n        process: \"XZllrzvpGSz52qQnmA_H-3q6OEz-jAl7-AfV0ZGRvik\",\n        tags: [{\n          name: \"Action\",\n          value: \"GetEmbedding_Proto\"\n        }, {\n          name: \"Input\",\n          value: textInput\n        } // Now using textInput\n        ],\n        signer: createDataItemSigner(window.arweaveWallet)\n      });\n      console.log(\"Message response:\", response);\n      setMessageResponse(response);\n      fetchResult(response);\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n    }\n  };\n  const copyToClipboard = text => {\n    navigator.clipboard.writeText(text).then(() => {\n      console.log('Text copied to clipboard');\n    }, err => {\n      console.error('Unable to copy text', err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px'\n      },\n      children: [!isArConnectAvailable && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please install ArConnect to use this app.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 37\n      }, this), isArConnectAvailable && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: connectToArConnect,\n          children: \"Connect to ArConnect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Enter your message\",\n          variant: \"outlined\",\n          value: textInput,\n          onChange: handleTextInputChange,\n          fullWidth: true,\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: sendMessage,\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 19\n        }, this), resultOutput && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"seconday\",\n            onClick: () => copyToClipboard(JSON.stringify(resultOutput, null, 2)),\n            children: \"Copy to Clipboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Embedding Output:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              overflowX: 'auto',\n              whiteSpace: 'nowrap'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: JSON.stringify(resultOutput, null, 2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"KrGlIxxjUN9GwTqW82+Cph9Z8b4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["message","result","createDataItemSigner","React","useState","useEffect","Button","TextField","createTheme","ThemeProvider","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isArConnectAvailable","setIsArConnectAvailable","messageResponse","setMessageResponse","resultOutput","setResultOutput","textInput","setTextInput","theme","window","arweaveWallet","handleTextInputChange","event","target","value","fetchResult","messageId","Messages","Spawns","Output","Error","process","console","log","Data","error","connectToArConnect","connect","sendMessage","alert","response","tags","name","signer","copyToClipboard","text","navigator","clipboard","writeText","then","err","children","style","padding","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","onClick","label","onChange","fullWidth","margin","JSON","stringify","overflowX","whiteSpace","_c","$RefreshReg$"],"sources":["/Users/chim/arweave_website_proto/ao_embedder_proto/src/App.js"],"sourcesContent":["\n\n\nimport { message, result, createDataItemSigner } from '@permaweb/aoconnect';\n// Consider importing a UI framework here\nimport React, { useState, useEffect } from 'react';\n\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\n\nfunction App() {\n    const [isArConnectAvailable, setIsArConnectAvailable] = useState(false);\n    const [messageResponse, setMessageResponse] = useState(null);\n    const [resultOutput, setResultOutput] = useState(null);\n    const [textInput, setTextInput] = useState(''); // Re-introduced for input field usage\n\n    const theme = createTheme({\n      // You can customize your theme here. For now, we'll just use the default theme.\n    });\n\n    useEffect(() => {\n        setIsArConnectAvailable(!!window.arweaveWallet);\n    }, []);\n\n    const handleTextInputChange = (event) => {\n        setTextInput(event.target.value);\n    };\n\n    const fetchResult = async (messageId) => {\n        try {\n          let { Messages, Spawns, Output, Error } = await result({\n              message: messageId, // Use the messageId from sendMessage response\n              process: \"XZllrzvpGSz52qQnmA_H-3q6OEz-jAl7-AfV0ZGRvik\",\n          });\n            console.log(\"Result data:\", { Messages, Spawns, Output, Error });\n            setResultOutput(Messages[0].Data); // Store the result data for displaying\n        } catch (error) {\n            console.error(\"Error fetching result:\", error);\n        }\n    };\n\n    const connectToArConnect = async () => {\n              try {\n                  // Requesting permissions from ArConnect; adjust permissions as needed\n                  await window.arweaveWallet.connect(['ACCESS_ADDRESS', 'SIGN_TRANSACTION']);\n                  console.log('Connected to ArConnect.');\n              } catch (error) {\n                  console.error('Error connecting to ArConnect:', error);\n              }\n          };\n\n    // Adjust sendMessage to use textInput\n    const sendMessage = async () => {\n        if (!isArConnectAvailable) {\n            alert('Please install ArConnect.');\n            return;\n        }\n\n        try {\n            const response = await message({\n                process: \"XZllrzvpGSz52qQnmA_H-3q6OEz-jAl7-AfV0ZGRvik\",\n                tags: [\n                    { name: \"Action\", value: \"GetEmbedding_Proto\" },\n                    { name: \"Input\", value: textInput } // Now using textInput\n                ],\n                signer: createDataItemSigner(window.arweaveWallet)\n            });\n\n            console.log(\"Message response:\", response);\n            setMessageResponse(response);\n            fetchResult(response);\n        } catch (error) {\n            console.error(\"Error sending message:\", error);\n        }\n    };\n\n    const copyToClipboard = (text) => {\n      navigator.clipboard.writeText(text).then(\n        () => {\n          console.log('Text copied to clipboard');\n        },\n        (err) => {\n          console.error('Unable to copy text', err);\n        }\n      );\n    };\n    \n\n    return (\n      <ThemeProvider theme={theme}>\n      {/* The rest of your component */}\n   \n      <div style={{ padding: '20px' }}>\n          {!isArConnectAvailable && <p>Please install ArConnect to use this app.</p>}\n          {isArConnectAvailable && (\n              <>\n                  <Button variant=\"contained\" color=\"primary\" onClick={connectToArConnect}>Connect to ArConnect</Button>\n                  <TextField\n                    label=\"Enter your message\"\n                    variant=\"outlined\"\n                    value={textInput}\n                    onChange={handleTextInputChange}\n                    fullWidth\n                    margin=\"normal\"\n                  />\n                  <Button variant=\"contained\" color=\"secondary\" onClick={sendMessage}>Send Message</Button>\n                  {resultOutput && (\n                    <div>\n                      <Button\n                        variant=\"contained\"\n                        color=\"seconday\"\n                        onClick={() => copyToClipboard(JSON.stringify(resultOutput, null, 2))}\n                      >\n                        Copy to Clipboard\n                      </Button>\n                      <h2>Embedding Output:</h2>\n                      <div style={{ overflowX: 'auto', whiteSpace: 'nowrap' }}>\n                        <pre>{JSON.stringify(resultOutput, null, 2)}</pre>\n                      </div>\n                    </div>\n                  )}\n              </>\n          )}\n      </div>\n      </ThemeProvider>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}